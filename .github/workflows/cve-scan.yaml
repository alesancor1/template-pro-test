name: Scan CVEs dispatch

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"

jobs:

  read-config:
    runs-on: ubuntu-latest
    outputs:
      ghcr-scanning: ${{ steps.read-ci-config.outputs.ghcr-cve-scan }}
      build-matrix: ${{ steps.read-ci-config.outputs.build-matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Read .github/ci.yaml
        id: read-ci-config
        uses: canonical/rocks-template-actions/actions/read-ci-config@4c02e00c3097551b7e5735619185f8b1e179f4f1


  check-images:
    name: Check image existence
    needs: [read-config]
    if: needs.read-config.outputs.ghcr-scanning == 'true'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.matrix }}
    steps:
      - name: Filter matrix to only existing images
        id: filter
        run: |
          MATRIX=$(echo '${{ needs.read-config.outputs.build-matrix }}' | jq -c '.')
          NEW_MATRIX=$(jq -c '[.[] | select(
            system("docker manifest inspect ghcr.io/${{ github.repository }}/" + .name + ":" + .tag + " > /dev/null 2>&1") == 0
          )]' <<< "$MATRIX")
          echo "Filtered matrix: $NEW_MATRIX"
          echo "matrix=$NEW_MATRIX" >> $GITHUB_OUTPUT


  run-scan:
    name: Run vulnerability scan
    needs: [check-images]
    if: ${{ needs.check-images.outputs.matrix != '[]' && needs.check-images.outputs.matrix != '' }}
    uses: canonical/oci-factory/.github/workflows/Vulnerability-Scan.yaml@main
    strategy:
      matrix: ${{ fromJson(needs.check-images.outputs.matrix) }}
    with:
      oci-image-name: ghcr.io/${{ github.repository }}/${{ matrix.name }}:${{ matrix.tag }}
      create-issue: true
      trivyignore-path: ${{ matrix.directory }}/.trivyignore
    permissions:
      contents: read
      packages: read
